package com.ecps.model;

import com.ecps.model.base.BaseModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.hibernate.validator.constraints.NotEmpty;

import javax.persistence.Column;
import javax.persistence.Id;
import javax.persistence.Table;

@ApiModel(value="用户表",description="数据库表：tb_user")
@Table(name = "tb_user")
public class TbUser extends BaseModel {

    @ApiModelProperty(value="",name="id", required=true)
    @NotEmpty
    @Id
    @Column(name = "id")
    private Long id;

    @ApiModelProperty(value="用户名",name="username", required=true)
    @NotEmpty
    @Column(name = "username")
    private String username;

    @ApiModelProperty(value="密码，加密存储",name="password", required=true)
    @NotEmpty
    @Column(name = "password")
    private String password;

    @ApiModelProperty(value="注册手机号",name="phone")
    @Column(name = "phone")
    private String phone;

    @ApiModelProperty(value="注册邮箱",name="email")
    @Column(name = "email")
    private String email;

    /**
     * 获取  字段:tb_user.id
     *
     * @return tb_user.id, 
     */
    public Long getId() {
        return id;
    }

    /**
     * 设置  字段:tb_user.id
     *
     * @param id the value for tb_user.id, 
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * 获取 用户名 字段:tb_user.username
     *
     * @return tb_user.username, 用户名
     */
    public String getUsername() {
        return username;
    }

    /**
     * 设置 用户名 字段:tb_user.username
     *
     * @param username the value for tb_user.username, 用户名
     */
    public void setUsername(String username) {
        this.username = username == null ? null : username.trim();
    }

    /**
     * 获取 密码，加密存储 字段:tb_user.password
     *
     * @return tb_user.password, 密码，加密存储
     */
    public String getPassword() {
        return password;
    }

    /**
     * 设置 密码，加密存储 字段:tb_user.password
     *
     * @param password the value for tb_user.password, 密码，加密存储
     */
    public void setPassword(String password) {
        this.password = password == null ? null : password.trim();
    }

    /**
     * 获取 注册手机号 字段:tb_user.phone
     *
     * @return tb_user.phone, 注册手机号
     */
    public String getPhone() {
        return phone;
    }

    /**
     * 设置 注册手机号 字段:tb_user.phone
     *
     * @param phone the value for tb_user.phone, 注册手机号
     */
    public void setPhone(String phone) {
        this.phone = phone == null ? null : phone.trim();
    }

    /**
     * 获取 注册邮箱 字段:tb_user.email
     *
     * @return tb_user.email, 注册邮箱
     */
    public String getEmail() {
        return email;
    }

    /**
     * 设置 注册邮箱 字段:tb_user.email
     *
     * @param email the value for tb_user.email, 注册邮箱
     */
    public void setEmail(String email) {
        this.email = email == null ? null : email.trim();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_user
     *
     * @mbggenerated
     */
    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(getClass().getSimpleName());
        sb.append(" [");
        sb.append("Hash = ").append(hashCode());
        sb.append(", id=").append(id);
        sb.append(", username=").append(username);
        sb.append(", password=").append(password);
        sb.append(", phone=").append(phone);
        sb.append(", email=").append(email);
        sb.append(", created=").append(created);
        sb.append(", updated=").append(updated);
        sb.append("]");
        return sb.toString();
    }
}